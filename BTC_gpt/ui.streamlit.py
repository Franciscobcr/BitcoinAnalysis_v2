from chatbot import Conversation
import streamlit as st
from PIL import Image
import os
import pandas as pd


# Configura√ß√µes da p√°gina
os.environ["TOKENIZERS_PARALLELISM"] = "false"
st.set_page_config(page_title="GPT_BTC", page_icon="ü™ô", layout="centered")

# Exibir a imagem
image = Image.open('C:/Users/Francisco/Pictures/linkedin.jfif')
st.image(image, use_column_width=True)

# T√≠tulo da p√°gina
st.title("üìà GPT Analista de BTC")

# Descri√ß√£o com markdown e CSS
st.markdown("""
<style>
    .main-description {
        font-size: 18px;
        font-weight: 500;
        line-height: 1.6;
    }
</style>
<div class="main-description">
    Um chatbot inteligente especializado em an√°lise de Bitcoin para opera√ß√µes de swing trading. 
    Ele utiliza dados em tempo real de derivativos, on-chain, an√°lise t√©cnica e macroecon√¥mica para fornecer previs√µes din√¢micas e recomenda√ß√µes ajustadas conforme as condi√ß√µes do mercado.
</div>
""", unsafe_allow_html=True)

# Bot√£o para gerar a an√°lise
generate_button = st.button("üí° Gerar An√°lise")

# Se o bot√£o for clicado, gerar a resposta do Chatbot e salvar no CSV
if generate_button:
    # Exemplo de prompt enviado ao chatbot
    prompt = "An√°lise de swing trading para Bitcoin com base nos dados atuais"
    
    # Gerar a resposta do chatbot
    ai_response = Conversation()
    response = ai_response.send()

    # Exibir a resposta do Chatbot no Streamlit
    st.write(response)
